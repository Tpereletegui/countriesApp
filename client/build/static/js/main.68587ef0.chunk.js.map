{"version":3,"sources":["components/LandingPage/landingPage.js","redux/actions.js","components/Nav/map.jpg","components/Nav/Nav.js","components/Activities/Activities.js","components/Home/Home.js","components/Form/Form.js","components/Details/Details.js","App.js","reportWebVitals.js","redux/reducer.js","redux/store.js","index.js"],"names":["LandingPage","className","to","getCountriesOrder","order","page","dispatch","axios","get","then","response","type","payload","data","getCountries","getActivities","console","log","Nav","useState","input","setInput","useDispatch","useEffect","placeholder","onChange","e","target","value","onClick","name","catch","Activities","activities","useSelector","state","a","preventDefault","length","map","i","difficulty","duration","season","countries","x","id","Home","useHistory","setPage","setOrder","pages","window","scrollTo","label","width","src","image","alt","continent","disabled","Form","error","setError","values","setValues","sort","b","localeCompare","onSubmit","post","createActivity","htmlFor","test","includes","filter","ct","multiple","find","Details","this","props","location","split","toString","removeCountry","getCountryId","countryDetail","capital","subregion","area","population","toUpperCase","React","Component","connect","App","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","reducer","action","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"gWAkBeA,MAbf,WAEC,OACC,qBAAKC,UAAU,OAAf,SACC,qBAAKA,UAAU,QAAf,SACC,eAAC,IAAD,CAASC,GAAG,QAAQD,UAAU,OAA9B,cAAsC,wBAAQA,UAAU,QAAlB,qBAAtC,Y,gCCRG,SAASE,EAAkBC,EAAOC,GACrC,OAAO,SAASC,GACZC,IAAMC,IAAI,mCAAoCJ,EAAQ,SAAWC,GAChEI,MAAK,SAAAC,GACF,OAAOJ,EAAS,CAACK,KAAM,sBAAuBC,QAASF,EAASG,WAiCpE,SAASC,EAAaT,GACzB,OAAO,SAASC,GACZC,IAAMC,IAAI,wCAAyCH,GAClDI,MAAK,SAAAC,GACF,OAAOJ,EAAS,CAACK,KAAM,gBAAiBC,QAASF,EAASG,WAqChE,SAASE,EAAeX,GAC3B,OAAO,SAAUE,GACbC,IAAMC,IAAI,0CAA4CJ,GACrDK,MAAK,SAAAC,GACFM,QAAQC,IAAIP,GACXJ,EAAS,CACVK,KAAM,iBAAkBC,QAASF,EAASG,W,MCtFvC,ICoDAK,MA5Cf,WACC,MAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACOf,EAAWgB,cAgBlB,OAfAC,qBAAU,WACTjB,EFiFS,CACHK,KAAM,qBEjFZL,EAASQ,OACP,CAACR,IAeH,sBAAKL,UAAU,YAAf,UAEA,sBAAKA,UAAU,YAAf,UAEA,uBAAOU,KAAK,OAAOa,YAAY,sBAAsBC,SAhBlC,SAAAC,GACnBL,EAASK,EAAEC,OAAOC,QAe2DA,MAAOR,IACpF,wBAAQS,QAdM,WF4BR,IAAyBC,EE3B/BxB,EFwES,CACHK,KAAM,qBExEZL,GF0B+BwB,EE1BNV,EF2Bf,SAASd,GACZC,IAAMC,IAAI,wCAA0CsB,GACnDrB,MAAK,SAAAC,GACFJ,EAAS,CAACK,KAAM,mBAAoBC,QAASF,EAASG,UAEzDkB,OAAM,SAAAL,GAAC,OAAIV,QAAQC,IAAIS,UEpB/B,uBAGA,sBAAKzB,UAAU,QAAf,UACA,cAAC,IAAD,CAASC,GAAG,QAAQD,UAAU,OAA9B,oBACA,cAAC,IAAD,CAASC,GAAG,cAAcD,UAAU,aAApC,iC,+BC/Ba,SAAS+B,IAGpB,IAAM1B,EAAUgB,cACZW,EAAaC,aAAY,SAAAC,GAAK,OAAIA,EAAMF,cAJV,4CAalC,WAA4BP,GAA5B,SAAAU,EAAA,sDACIV,EAAEW,iBAGF/B,EAASS,EAAcW,EAAEC,OAAOC,QAJpC,4CAbkC,sBA4BlC,OApBCL,qBAAU,WACXjB,EAASS,EAAc,UAEpB,CAACT,IAkBA,sBAAKL,UAAU,uBAAf,UACKe,QAAQC,IAAIgB,GACb,cAAC,EAAD,IACA,sBAAKhC,UAAU,qBAAf,UAEA,+CACA,yBAAQwB,SAnCkB,4CAmCOxB,UAAU,oBAA3C,UAEI,wBAAQ2B,MAAM,IAAd,eACI,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,kBAEJ,2CACJ,yBAAQH,SAzBhB,SAA4BC,GACxBA,EAAEW,iBACF/B,EAASS,EAAcW,EAAEC,OAAOC,SAuBU3B,UAAU,oBAAhD,UAEQ,wBAAQ2B,MAAM,IAAd,eACA,wBAAQA,MAAM,MAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,uBAGR,cAAC,IAAD,CAAM1B,GAAG,UAAT,SAAmB,wBAAQD,UAAU,oBAAlB,0BAEnB,qBAAKA,UAAU,mBAAf,SAEIgC,EAAWK,OAEXL,EAAWM,KAAI,SAACb,EAAGc,GACf,OAEA,sBAAavC,UAAU,kBAAvB,UACE,oBAAIA,UAAU,mBAAd,SAAkCyB,EAAEI,OACpC,oBAAG7B,UAAU,kBAAb,mCAAsDyB,EAAEe,cACxD,oBAAGxC,UAAU,kBAAb,mBAAsCyB,EAAEgB,YACxC,mBAAGzC,UAAU,oBAAb,SAAkCyB,EAAEiB,SACnC,oBAAI1C,UAAU,uBAAd,yBALH,IAK0DyB,EAAEkB,UAAYlB,EAAEkB,UAAUL,KAAI,SAAAM,GAAC,OACvF,eAAC,IAAD,CAAM3C,GAAE,kBAAa2C,EAAEC,IAAM7C,UAAU,kBAAvC,cAA0D,oBAAGA,UAAU,qBAAb,cAAoC4C,EAAEf,cAAoB,qDAN5GU,MAQT,iF,MCmFNO,MA1Jf,WAII,IAAIH,EAAWV,aAAa,SAAAC,GAAK,OAAIA,EAAMS,aAErCtC,GADO0C,cACG1B,eAEhB,EAAwBH,mBAAS,GAAjC,mBAAOd,EAAP,KAAa4C,EAAb,KACA,EAAyB9B,mBAAS,IAAlC,mBAAOf,EAAP,KAAc8C,EAAd,KAwBD,SAASC,EAAMzB,GACU,SAAjBA,EAAEC,OAAOC,OACRwB,OAAOC,SAAS,EAAG,GACnB/C,EJ+CD,CACHK,KAAM,qBI/CFL,EAASH,EAAkBC,EAAOC,EAAO,IACzC4C,EAAQ5C,EAAO,KAIf+C,OAAOC,SAAS,EAAG,GACrB/C,EJwCC,CACHK,KAAM,qBIxCFL,EAASH,EAAkBC,EAAOC,EAAO,IACzC4C,EAAQ5C,EAAO,IAmBvB,OApDGkB,qBAAU,WACTjB,EJsEG,CACHK,KAAM,qBItENL,EAASQ,EAAa,MACvB,CAACR,IAmDA,sBAAKL,UAAU,aAAf,UACK,cAAC,EAAD,IAEA,sBAAKA,UAAU,UAAf,UACA,4CACA,yBAAQA,UAAU,SAASwB,SArDpC,SAAsBC,GACD,QAAjBA,EAAEC,OAAOC,OACXtB,EJ+DK,CACHK,KAAM,qBI/DRL,EAASQ,EAAa,MAInBoC,EAASxB,EAAEC,OAAOC,OAClBqB,EAAQ,GACR3C,EJwDE,CACHK,KAAM,qBIxDLL,EAASH,EAAkBuB,EAAEC,OAAOC,MAAO,MA2CvC,UACA,wBAAQA,MAAM,MAAd,iBACG,2BAAU3B,UAAU,WAAWqD,MAAM,aAArC,UACE,wBAAQ1B,MAAM,MAAd,iBACA,wBAAQA,MAAM,OAAd,oBAED,2BAAU3B,UAAU,WAAWqD,MAAM,aAArC,UACC,wBAAQ1B,MAAM,SAAd,sBACA,wBAAQA,MAAM,UAAd,0BAEF,2BAAU3B,UAAU,WAAWqD,MAAM,OAArC,UACE,wBAAQ1B,MAAM,QAAd,sBACA,wBAAQA,MAAM,QAAd,0BAGF,2BAAU0B,MAAM,YAAhB,UACE,wBAAQ1B,MAAM,IAAd,eACA,wBAAQA,MAAM,SAAd,oBACD,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,OAAd,kBACC,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,UAAd,8BA0BN,qBAAK3B,UAAU,QAAf,SAEA2C,EAAUN,OACVM,EAAUL,KAAI,SAACb,EAAGc,GAEd,OADCxB,QAAQC,IAAI2B,GAET,sBAAK3C,UAAU,OAAf,UACI,qBAAKA,UAAU,SAAf,SACF,qBAAKsD,MAAM,QAAQC,IAAK9B,EAAE+B,MAAOC,IAAI,GAAIzD,UAAU,UAEnD,qBAAKA,UAAU,OAAf,SACA,eAAC,IAAD,CAASC,GAAE,kBAAawB,EAAEoB,IAAM7C,UAAU,QAA1C,cAAmD,mBAAGA,UAAU,QAAb,SAAsByB,EAAEI,OAA3E,SAEA,mBAAG7B,UAAU,YAAb,SAA0ByB,EAAEiC,cAPHnB,MAU3B,qBAAKvC,UAAU,SAAf,SACI,mBAAGA,UAAU,OAAb,uFAOZ,sBAAKA,UAAU,UAAf,UACA,wBAAQ4B,QAASsB,EAAOvB,MAAM,WAAWgC,SAAiB,IAAPvD,EAAnD,sBACA,wBAAQwB,QAASsB,EAAOvB,MAAM,OAAOgC,SAAUhB,EAAUN,OAAS,GAAMM,EAAUN,OAAQ,GAA1F,yB,6BCiCGuB,MAnLf,WACI,IAAMjB,EAAWV,aAAY,SAAAC,GAAK,OAAIA,EAAMS,aACtCtC,EAAUgB,cAEhBC,qBAAU,WAELjB,GLDE,SAASA,GACZC,IAAMC,IAAI,uCACTC,MAAK,SAAAC,GACF,OAAOJ,EAAS,CAACK,KAAM,oBAAqBC,QAASF,EAASG,eKDnE,CAACP,IAEJU,QAAQC,IAAI,YAAa2B,GACzB,MAAyBzB,mBAAS,cAAlC,mBAAO2C,EAAP,KAAcC,EAAd,KACA,EAA4B5C,mBAAS,CACjCW,KAAM,GACNW,WAAY,GACZC,SAAU,GACVC,OAAQ,GACRC,UAAW,KALf,mBAAOoB,EAAP,KAAeC,EAAf,KAyGI7D,EAAQwC,EAAUsB,MAAK,SAAC9B,EAAG+B,GAAJ,OAAS/B,EAAEN,KAAKsC,cAAcD,EAAErC,SAE3D,OACI,sBAAK7B,UAAU,iBAAf,UACA,cAAC,EAAD,IACA,oBAAIA,UAAU,aAAd,6BACA,uBAAMoE,SArBO,SAAC3C,GAEdpB,ELzCA,SAAyB0D,GAC7B,OAAO,SAAS1D,GACZC,IAAM+D,KAAK,iCAAkCN,GAC5CvD,MAAK,SAAAC,GAAQ,OAAGJ,EAAS,CACtBK,KAAM,kBAAmBC,QAASF,EAASG,UAE9CkB,OAAM,SAAAL,GAAC,OAAIV,QAAQC,IAAIS,OKmCf6C,CAAeP,IACxBC,EAAU,CACNnC,KAAM,GACNW,WAAW,GACXC,SAAS,GACTC,OAAQ,GACRC,UAAW,MAaW3C,UAAU,YAApC,UACK,uBAAOuE,QAAQ,GAAGvE,UAAU,aAA5B,oBACD,uBAAO6B,KAAK,OAAOF,MAAOoC,EAAOlC,KAAML,SAAU,SAACC,GAAD,MAjF1C,MADOE,EAkFsDF,EAAEC,OAAOC,QAhF7EmC,EAAS,mBAGbE,EAAU,2BACHD,GADE,IAELlC,KAAMF,KAPd,IAAsBA,GAkFuE3B,UAAU,cAC/F,uBAAOuE,QAAQ,GAAGvE,UAAU,aAA5B,+BACA,uBAAQ6B,KAAK,WAAWF,MAAOoC,EAAOtB,SAAUjB,SAAU,SAACC,GAAD,OAzExCE,EAyE8DF,EAAEC,OAAOC,MAxEzF,QAAQ6C,KAAK7C,GAGbmC,EAAS,cAFTA,EAAS,iBAMbE,EAAU,2BACHD,GADE,IAELtB,SAAUd,KAVlB,IAA0BA,GAyE+E3B,UAAmB,aAAR6D,EAAmB,sBAAuB,kBAC7I,aAARA,EAAqB,sBAAM7D,UAAU,YAAhB,mCAA2D,KACjF,uBAAOA,UAAU,aAAjB,wBACA,yBAAQ6B,KAAK,aAAaL,SAAU,SAACC,GAAD,MAjG7B,MADaE,EAkGwCF,EAAEC,OAAOC,QAhGrEmC,EAAS,mBAGbE,EAAU,2BACHD,GADE,IAELvB,WAAYb,KAPpB,IAA4BA,GAkGyD3B,UAAU,kBAAvF,UACI,wBAAQ2B,MAAM,GAAG3B,UAAU,cAA3B,eACD,wBAAQ2B,MAAM,IAAI3B,UAAU,cAA5B,eACA,wBAAQ2B,MAAM,IAAI3B,UAAU,cAA5B,eACA,wBAAQ2B,MAAM,IAAI3B,UAAU,cAA5B,eACA,wBAAQ2B,MAAM,IAAI3B,UAAU,cAA5B,eACA,wBAAQ2B,MAAM,IAAI3B,UAAU,cAA5B,kBAGH,uBAAOA,UAAU,aAAjB,oBACA,yBAAQ6B,KAAK,SAASL,SAAU,SAACC,GAAD,OAxHhBE,EAwHoCF,EAAEC,OAAOC,MAtH7DmC,EADO,KAARnC,EACU,GAEA,mBAEbqC,EAAU,2BACHD,GADE,IAELrB,OAAQf,KARhB,IAAwBA,GAwHqD3B,UAAU,cAA/E,UACG,wBAAQ2B,MAAM,GAAG3B,UAAU,cAA3B,eACA,wBAAQ2B,MAAM,SAAS3B,UAAU,cAAjC,oBACA,wBAAQ2B,MAAM,SAAS3B,UAAU,cAAjC,oBACA,wBAAQ2B,MAAM,SAAS3B,UAAU,cAAjC,oBACA,wBAAQ2B,MAAM,SAAS3B,UAAU,cAAjC,uBAGH,uBAAOA,UAAU,uBAAjB,uBAEA,wBAAQwB,SA1EK,SAACC,GAEfsC,EAAOpB,UAAU8B,SAAShD,EAAEC,OAAOC,OAClCqC,EAAU,2BACHD,GADE,IAELpB,UAAWoB,EAAOpB,UAAU+B,QAAO,SAAAC,GAAE,OAAEA,IAAOlD,EAAEC,OAAOC,YAG3DqC,EAAU,2BACHD,GADE,IAELpB,UAAU,GAAD,mBAAMoB,EAAOpB,WAAb,CAAwBlB,EAAEC,OAAOC,YAgEdE,KAAK,YAAY+C,UAAQ,EAAC5E,UAAU,iBAApE,SAGQG,EAAMmC,KAAI,SAACb,EAAEc,GAAH,OAAO,wBAAmBZ,MAAOF,EAAEoB,GAAI7C,UAAU,wBAA1C,SAAmEyB,EAAEI,MAAxDJ,EAAEoB,SAGxC,8BAEIkB,EAAOpB,UAAUL,KAAI,SAAAb,GAEb,IAAI4B,EAAOV,EAAUkC,MAAK,SAAAjC,GAAC,OAAInB,IAAImB,EAAEC,MAEtC,OACA,oBAAG7C,UAAU,eAAb,eAA+BqD,EAAMxB,aAOhD,wBAASD,QAhFD,SAAAH,GACZA,EAAEW,iBACF4B,EAAU,2BACHD,GADE,IAELpB,UAAW,OA4EkB3C,UAAU,wBAAvC,mBACA,wBAAQU,KAAK,SAASiD,SAAUE,EAAMxB,OAAO,EAAGrC,UAAU,cAA1D,2B,gCC3KN8E,G,6KACF,WACI/D,QAAQC,IAAI+D,KAAKC,OACjB,IAGMnC,EAHQkC,KAAKC,MAAMC,SAAX,SACKC,MAAM,KACL,GACJC,WAChBpE,QAAQC,IAAI6B,GACZM,OAAOC,SAAS,EAAG,GACnB2B,KAAKC,MAAMI,gBACXL,KAAKC,MAAMK,aAAaxC,K,oBAG5B,WACI,OACI,sBAAK7C,UAAU,oBAAf,UACQ,cAAC,EAAD,IACA,sBAAKA,UAAU,eAAf,UACKe,QAAQC,IAAI+D,KAAKC,MAAMM,eACxB,qBAAK/B,IAAKwB,KAAKC,MAAMM,cAAc9B,MAAOC,IAAKsB,KAAKC,MAAMM,cAAczD,KAAM7B,UAAU,uBACxF,oBAAIA,UAAU,oBAAd,SAAmC+E,KAAKC,MAAMM,cAAczD,OAC5D,mBAAG7B,UAAU,yBAAb,SAAuC+E,KAAKC,MAAMM,cAAc5B,YAChE,8BAAG,yCAAH,IAAoBqB,KAAKC,MAAMM,cAAcC,WAC7C,8BAAG,2CAAH,IAAsBR,KAAKC,MAAMM,cAAcE,aACnD,sBAAKxF,UAAU,qBAAf,UACI,8BAAG,sCAAH,OACA,8BAAG,4CAAH,UAEA,sBAAKA,UAAU,uBAAf,UACA,4BAAI+E,KAAKC,MAAMM,cAAcG,OAC7B,4BAAIV,KAAKC,MAAMM,cAAcI,mBAG7B,oBAAI1F,UAAU,2BAAd,wBAEA,qBAAKA,UAAU,qBAAf,SACE+E,KAAKC,MAAMM,cAActD,WAAa+C,KAAKC,MAAMM,cAActD,WAAWM,KAAI,SAAAM,GAAC,OAE9E,sBAAK5C,UAAU,0BAAf,UACM,oBAAIA,UAAU,+BAAd,SAA+C4C,EAAEf,KAAK8D,gBACtD,oBAAG3F,UAAU,mCAAb,cAAiD,0CAAjD,IAAmE4C,EAAEH,SAArE,YACA,oBAAGzC,UAAU,qCAAb,UAAkD,4CAAlD,IAAsE4C,EAAEJ,WAAxE,OACA,oBAAGxC,UAAU,iCAAb,UAA8C,wCAA9C,IAA8D4C,EAAEF,gBAGnE,wE,GA7CRkD,IAAMC,YAwEXC,mBAdb,SAAyB5D,GACrB,MAAO,CACHoD,cAAepD,EAAMoD,kBAI7B,SAA6BjF,GACzB,MAAO,CACHgF,aAAc,SAACxC,GAAD,OAAQxC,ENd1B,SAAsBwC,GACzB,OAAO,SAASxC,GACZC,IAAMC,IAAI,iCAAiCsC,GAC1CrC,MAAK,SAAAC,GAAQ,OAAIJ,EAAS,CACvBK,KAAM,iBAAkBC,QAASF,EAASG,WMUZyE,CAAaxC,KAC5CuC,cAAe,kBAAM/E,ENyBtB,CACHK,KAAM,uBMrBGoF,CAA6ChB,GCzD/CiB,MAZf,WACE,OACE,sBAAK/F,UAAU,MAAf,UACE,cAAC,IAAD,CAAOgG,OAAK,EAACC,KAAK,IAAIC,UAAWnG,IACjC,cAAC,IAAD,CAAOkG,KAAK,UAAUC,UAAWpB,IACjC,cAAC,IAAD,CAAOmB,KAAK,QAAQC,UAAWpD,IAC/B,cAAC,IAAD,CAAOmD,KAAK,UAAUC,UAAWtC,IACjC,cAAC,IAAD,CAAOqC,KAAK,cAAcC,UAAWnE,QCL5BoE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB7F,MAAK,YAAkD,IAA/C8F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,wBCNRO,EAAa,CACfhE,UAAW,GACXX,WAAY,GACZsD,cAAe,IA8DJsB,MA1Df,WAA8C,IAA7B1E,EAA4B,uDAArByE,EAAcE,EAAO,uCACzC,OAAOA,EAAOnG,MACV,IAAK,sBAML,IAAK,gBAKL,IAAK,oBAML,IAAK,mBACG,OAAO,2BACAwB,GADP,IAEIS,UAAWkE,EAAOlG,UAE/B,IAAK,iBACI,OAAO,2BACAuB,GADP,IAEIoD,cAAeuB,EAAOlG,UAElC,IAAK,2BACD,OAAO,2BACAuB,GADP,IAEIS,UAAWkE,EAAOlG,QAAQ+D,QAAO,SAAA9B,GAAC,OAAIA,EAAEc,YAAcmD,EAAOnD,eAGrE,IAAK,iBACD,OAAO,2BACAxB,GADP,IAEIF,WAAY6E,EAAOlG,UAG3B,IAAK,mBACD,OAAO,2BACAuB,GADP,IAEIS,UAAU,KAElB,IAAK,iBACD,OAAO,2BACAT,GADP,IAEIoD,cAAc,KAEtB,QACI,OAAOpD,IChDJ4E,EALFC,sBACZH,EAASI,8BACRC,0BAAgBC,OCAlBC,IAASC,OACL,cAAC,IAAD,CAAUN,MAAOA,EAAjB,SACA,cAAC,IAAD,UACA,cAAC,EAAD,QAIFO,SAASC,eAAe,SAM1BnB,M","file":"static/js/main.68587ef0.chunk.js","sourcesContent":["import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport \"./landingPge.css\"\n\n\nfunction LandingPage() {\n\n\treturn (\n\t\t<div className=\"main\">\n\t\t\t<div className=\"boton\">\n\t\t\t <NavLink to=\"/home\" className=\"link\"> <button className=\"enter\">Explore</button> </NavLink> \n\t\t\t</div>\n\t\t </div> \n\t\t\n\t\t)\n};\n\n\nexport default LandingPage;"," import axios from \"axios\";\n\nexport function getCountriesOrder(order, page) {\n    return function(dispatch) {\n        axios.get(\"http://localhost:3001/countries/\"+ order + \"?page=\" + page)\n        .then(response => {\n            return dispatch({type: \"GET_COUNTRIES_ORDER\", payload: response.data})\n        })\n    }\n}\n\n\nexport function getAllCountries(page) {\n    return function(dispatch) {\n        axios.get(\"http://localhost:3001/countries/all\")\n        .then(response => {\n            return dispatch({type: \"GET_ALL_COUNTRIES\", payload: response.data})\n        })\n    }\n};\n\nexport function sortCountriesContinent(continent){\n    return function(dispatch) {\n        axios.get(\"http://localhost:3001/countries/all\")\n        .then(response => {\n            return dispatch({type: \"SORT_COUNTRIES_CONTINENT\", payload: response.data, continent: continent})\n        })\n    }\n}\n\nexport function sortCountriesActivity(activity){\n    return function(dispatch) {\n        axios.get(\"http://localhost:3001/countries/all\")\n        .then(response => {\n            return dispatch({type: \"SORT_COUNTRIES_ACTIVITY\", payload: response.data, activity: activity})\n        })\n    }\n}\n\n export function getCountries(page) {\n     return function(dispatch) {\n         axios.get(\"http://localhost:3001/countries?page=\"+ page)\n         .then(response => {\n             return dispatch({type: \"GET_COUNTRIES\", payload: response.data})\n         })\n     }\n };\n\n export function searchCountries(name) {\n     return function(dispatch) {\n         axios.get(\"http://localhost:3001/countries?name=\" + name)\n         .then(response => {\n             dispatch({type: \"GET_COUNTRY_NAME\", payload: response.data})\n         })\n         .catch(e => console.log(e))\n     }\n };\n\n\n export function getCountryId(id) {\n     return function(dispatch) {\n         axios.get(\"http://localhost:3001/country/\"+id)\n         .then(response => dispatch({\n             type: \"GET_COUNTRY_ID\", payload: response.data\n         }))\n     }\n };\n\n\n\n export function createActivity (values) {\n    return function(dispatch){\n        axios.post(\"http://localhost:3001/activity\", values)\n        .then(response =>dispatch({\n            type: \"CREATE_ACTIVITY\", payload: response.data\n        }))\n        .catch(e => console.log(e))\n    }\n}\n\nexport function getActivities (order ) {\n    return function (dispatch) {\n        axios.get(\"http://localhost:3001/activities?order=\" + order)\n        .then(response => {\n            console.log(response)\n             dispatch({\n            type: \"GET_ACTIVITIES\", payload: response.data\n        })})\n    }\n} \n\n\nexport function removeCountries() {\n    return {\n        type: \"REMOVE_COUNTRIES\"\n    }\n}\n\nexport function removeCountry() {\n    return {\n        type: \"REMOVE_COUNTRY\"\n    }\n}\n\n\n\n\n        \n    \n \n\n\n","export default __webpack_public_path__ + \"static/media/map.6e9d4e57.jpg\";","import React, {useEffect, useState} from \"react\";\nimport { useDispatch} from \"react-redux\";\nimport { NavLink} from \"react-router-dom\";\nimport { getCountries, searchCountries, removeCountries} from \"../../redux/actions\";\nimport \"./nav.css\";\nimport logo from \"./map.jpg\"\n\n\nfunction Nav(){\n\tconst [input, setInput] =useState(\"\");\n\t const dispatch = useDispatch(); \n\tuseEffect(()=>{\n\t\tdispatch(removeCountries())\n\t\tdispatch(getCountries())\n\t}, [dispatch])\n\t//ACA METER UN USEEFFECT como componentDidMount\n\n\tconst handleInput = e => {\n\t\tsetInput(e.target.value)\n\t}\n\tconst buscar = () => {\n\t\tdispatch(removeCountries())\n\t\tdispatch(searchCountries(input))\n\t}\n\n\t// aca poner una funcion que handle el \"buscar por nombre\";\n\treturn (\n\n\n\t\t<div className=\"container\">\n\t\t\t\n\t\t<div className=\"searchbar\">\n\t\t\n\t\t<input type=\"text\" placeholder=\"Search Your Country\" onChange={handleInput}  value={input} />\n\t\t<button onClick={buscar}>Search</button>\n\t\t\n\t\t</div>\n\t\t<div className=\"links\">\n\t\t<NavLink to=\"/home\" className=\"home\"> Home </NavLink>\n\t\t<NavLink to=\"/activities\" className=\"activities\"> Activities </NavLink>\n\t\t\n\t\t</div>\n\t\t\n\t\t\n\t\t\n\t\t </div>\n\t\t\n\n\t)\n}\n\n\nexport default Nav;\n","import React,{useEffect, useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Nav from \"../Nav/Nav\";\nimport { getActivities, getCountries} from \"../../redux/actions\";\nimport { Link } from \"react-router-dom\";\nimport \"./activities.css\";\n\n\nexport default function Activities () {\n\n\n    const dispatch= useDispatch();\n    let activities = useSelector(state => state.activities);\n    \n\n\n     useEffect(() => {\n    dispatch(getActivities(\"all\"));\n        \n    }, [dispatch]); \n\n    async function handleSelect(e){\n        e.preventDefault();\n        /* setOrder(e.target.value); */\n        \n        dispatch(getActivities(e.target.value))\n        \n    }\n\n    function handleSelectSeason(e) {\n        e.preventDefault();\n        dispatch(getActivities(e.target.value))\n    }\n\n\n\n    return (\n        <div className=\"activities_container\">\n            {console.log(activities)}\n            <Nav />\n            <div className=\"activities_filters\">\n            \n            <label>Difficulty</label>\n            <select onChange={handleSelect}  className=\"activities_select\">\n                \n                <option value=\"-\">-</option>\n                    <option value=\"all\">All</option>\n                    <option value=\"1\">1</option>\n                    <option value=\"2\">2</option>\n                    <option value=\"3\">3</option>\n                    <option value=\"4\">4</option>\n                    <option value=\"5\">5</option>\n                    </select>\n                <label>Season</label> \n            <select onChange={handleSelectSeason} className=\"activities_select\">\n                \n                    <option value=\"-\">-</option>\n                    <option value=\"all\">All</option>\n                    <option value=\"Summer\">Summer</option>\n                    <option value=\"Spring\">Spring</option>\n                    <option value=\"Winter\">Winter</option>\n                    <option value=\"Autumn\">Autumn</option>   \n                    \n            </select>\n            <Link to='/create'><button className=\"activities_button\">Add New</button></Link>\n            </div>\n            <div className=\"activities_cards\">\n            {\n                activities.length?\n                \n                activities.map((e, i)=>{\n                    return (\n                        \n                    <div key={i} className=\"activities_card\">\n                      <h3 className=\"activities_title\">{e.name}</h3>\n                      <p className=\"activities_name\"> Difficulty (1 to 5): {e.difficulty}</p>\n                      <p className=\"activities_name\">Days: {e.duration}</p>\n                      <p className=\"activities_season\">{e.season}</p>\n                       <h4 className=\"activities_countries\">Countries: </h4> {e.countries ? e.countries.map(x=>\n                      <Link to={`/detail/${x.id}`} className=\"activities_link\"> <p className=\"activities_country\">-{x.name}</p></Link> ): <p>No countries added</p>}\n                    </div>\n                )}): <p>There are not tourist activities registered</p>\n            \n            }\n            </div>\n        </div>\n    )\n }\n\n\n","import React, {useEffect, useState} from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { NavLink, useHistory } from \"react-router-dom\";\nimport Nav from \"../Nav/Nav\";\nimport Activities from \"../Activities/Activities\";\nimport {getCountries, getCountriesOrder, sortCountriesContinent, removeCountries} from \"../../redux/actions\"; \nimport \"./home.css\";\n\n\n\nfunction Home() {\n    \n    \n\n    let countries= useSelector (state => state.countries)\n    let history= useHistory();\n    const dispatch= useDispatch();\n     \n    const [page, setPage] = useState(1);\n    const [order, setOrder] =useState(\"\")\n    \n    \n       useEffect(()=> {\n        dispatch(removeCountries());\n        dispatch(getCountries(1))\n    }, [dispatch]);  \n     \n    \n    function handleChange(e){\n     if(e.target.value===\"all\"){ \n      dispatch(removeCountries())\n      dispatch(getCountries(1));\n      \n    }\n     else {\n         setOrder(e.target.value);\n         setPage(1);\n         dispatch(removeCountries());\n         dispatch(getCountriesOrder(e.target.value, 1))\n         \n      }   \n    } \n\n   function pages(e) {\n        if(e.target.value===\"next\"){\n            window.scrollTo(0, 0)\n            dispatch(removeCountries())\n            dispatch(getCountriesOrder(order, page + 1));\n            setPage(page + 1);\n            \n        }\n        else {\n            window.scrollTo(0, 0)\n          dispatch(removeCountries())\n            dispatch(getCountriesOrder(order, page - 1));\n            setPage(page - 1);\n            \n        }\n    } \n\n    function handleSelectContinent(e) {\n        if(e.target.value===\"-\") {\n          dispatch(removeCountries())\n            dispatch(getCountries(1))\n            \n\n        }else{\n          dispatch(removeCountries())\n          dispatch(sortCountriesContinent(e.target.value))\n          \n        }\n    }\n\n    \n    return (\n        \n        <div className=\"contenedor\">\n             <Nav/> \n\n             <div className=\"filters\">\n             <label>Filters</label>\n             <select className=\"select\" onChange={handleChange}>\n             <option value=\"all\">All</option>\n                <optgroup className=\"optgroup\" label=\"Alphabetic\">\n                  <option value=\"asc\">A-Z</option>\n                  <option value=\"desc\">Z-A</option>\n                  </optgroup>\n                 <optgroup className=\"optgroup\" label=\"Population\"> \n                  <option value=\"larger\"> Largest</option>\n                  <option value=\"smaller\"> Smallest</option>\n                  </optgroup>\n                <optgroup className=\"optgroup\" label=\"Area\"> \n                  <option value=\"grand\"> Largest</option>\n                  <option value=\"petit\"> Smallest</option>\n                  </optgroup>\n                  \n                <optgroup label=\"Continent\">\n                  <option value=\"-\">-</option>\n                  <option value=\"Europe\">Europe</option>\n                 <option value=\"Americas\">Americas</option>\n                 <option value=\"Asia\">Asia</option>\n                  <option value=\"Africa\">Africa</option>\n                  <option value=\"Oceania\">Oceania</option>\n                </optgroup>\n\n             </select>\n\n            {/*<label className=\"label\">Order</label>\n            <select  onChange={handleChange} >\n                \n                <option value=\"all\">All</option>\n                <option value=\"asc\">A-Z</option>\n                <option value=\"desc\">Z-A</option>\n                <option value=\"larger\">Population: Largest</option>\n                <option value=\"smaller\">Population: Smallest</option>\n             </select>\n            <label className=\"label\">Continent</label>\n            <select  onChange={handleSelectContinent} > \n                <option value=\"-\">-</option>\n                <option value=\"Europe\">Europe</option>\n                <option value=\"Americas\">Americas</option>\n                <option value=\"Asia\">Asia</option>\n                <option value=\"Africa\">Africa</option>\n                <option value=\"Oceania\">Oceania</option>\n            </select> */}\n            </div>\n            \n\n            <div className=\"cards\"> \n             {\n            countries.length?\n            countries.map((e, i)=>{\n                {console.log(countries)}\n                return (\n                    <div className=\"card\" key={i}>\n                        <div className=\"imagen\">\n                      <img width=\"100px\" src={e.image} alt=\"\"  className=\"img\" />\n                      </div>\n                      <div className=\"name\">\n                      <NavLink to={`/detail/${e.id}`} className=\"title\"> <p className=\"title\">{e.name}</p> </NavLink>\n                      </div> \n                      <p className=\"continent\">{e.continent}</p>\n                  </div>  \n                )}): \n                    <div className=\"imagen\">\n                        <p className=\"fail\">Countries failed to load, please select a filter o reload the website</p>\n                    </div>\n                \n                }\n                \n                </div>\n            \n            <div className=\"buttons\">\n            <button onClick={pages} value=\"previous\" disabled={page===1} >Previous</button>\n            <button onClick={pages} value=\"next\" disabled={countries.length < 9  || countries.length >40} >Next</button>\n            </div>  \n        \n        </div>\n        )\n    \n}\n\n\n\nexport default Home;","import React, {useState, useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {createActivity, getAllCountries, removeCountries} from \"../../redux/actions\";\nimport {Link} from \"react-router-dom\";\nimport Nav from \"../Nav/Nav\";\nimport \"./form.css\";\n\n\nfunction Form () {\n    const countries= useSelector(state => state.countries)\n    const dispatch= useDispatch();\n\n    useEffect(() => {\n         \n         dispatch(getAllCountries())\n    }, [dispatch]);\n\n    console.log(\"countries\", countries)\n    const [error, setError] =useState(\"incomplete\")\n    const [values, setValues] = useState({\n        name: \"\",\n        difficulty: \"\",\n        duration: \"\",\n        season: \"\",\n        countries: [] \n    })\n\n    function validateSeason(value) {\n        if(value!==\"\"){\n            setError(\"\")\n        }else{\n            setError(\"incomplete\")\n        }\n        setValues({\n            ...values,\n            season: value\n        })\n    }\n\n    function validateDifficulty(value) {\n        if(value===\"\"){\n            setError(\"incomplete\")\n            \n        }\n        setValues({\n            ...values,\n            difficulty: value\n        })\n    }\n\n    function validateName(value) {\n        if(value===\"\"){\n            setError(\"incomplete\")\n            \n        }\n        setValues({\n            ...values,\n            name: value\n        })\n    }\n\n    function validateDuration(value) {\n        if(!/^\\d+$/.test(value)){\n            setError(\"duration\")\n        }else{\n            setError(\"incomplete\")\n        }\n            \n        \n        setValues({\n            ...values,\n            duration: value\n        })\n    }\n\n    const handleChange = (e) => {\n      \n        setValues({\n            ...values,\n            [e.target.name]: e.target.value\n        })\n    }\n    \n    const handleSelect = (e) => {\n       \n        if(values.countries.includes(e.target.value)){\n            setValues({\n                ...values,\n                countries: values.countries.filter(ct=>ct !== e.target.value)\n            })\n        } else {   \n            setValues({\n                ...values,\n                countries: [...values.countries, e.target.value]\n            })\n        }\n    }\n    const onClick2= e => {\n        e.preventDefault();\n        setValues({\n            ...values,\n            countries: []\n\n        })\n    } \n\n    \n\n\n    const onSubmit = (e) => {\n        \n        dispatch(createActivity(values))\n        setValues({\n            name: \"\",\n            difficulty:\"\",\n            duration:\"\",\n            season: \"\",\n            countries: []\n\n        })\n        /* setError(\"incomplete\") */\n    }\n\n    \n    let order = countries.sort((a, b)=> a.name.localeCompare(b.name))\n\n    return (\n        <div className=\"form_container\">\n        <Nav />\n        <h3 className=\"form_title\">Create Activity</h3>\n        <form onSubmit={onSubmit} className=\"form_form\">\n             <label htmlFor=\"\" className=\"form_label\">Name: </label>\n            <input name=\"name\" value={values.name} onChange={(e)=> validateName(e.target.value)} className=\"form_name\" />\n            <label htmlFor=\"\" className=\"form_label\">Duration (days): </label>\n            <input  name=\"duration\" value={values.duration} onChange={(e)=>validateDuration(e.target.value)} className={error===\"duration\"?\"form_duration_error\": \"form_duration\" }/>\n            {error===\"duration\" ? <span className=\"form_span\">it should be a Number</span> : null}\n            <label className=\"form_label\" >Difficulty</label>\n            <select name=\"difficulty\" onChange={(e)=>validateDifficulty(e.target.value)} className=\"form_difficulty\">\n                <option value=\"\" className=\"form_option\">-</option>\n               <option value=\"1\" className=\"form_option\">1</option> \n               <option value=\"2\" className=\"form_option\">2</option> \n               <option value=\"3\" className=\"form_option\">3</option> \n               <option value=\"4\" className=\"form_option\">4</option> \n               <option value=\"5\" className=\"form_option\">5</option> \n            </select>\n\n            <label className=\"form_label\">Season</label>\n            <select name=\"season\" onChange={(e)=>validateSeason(e.target.value)} className=\"form_season\">\n               <option value=\"\" className=\"form_option\">-</option> \n               <option value=\"Summer\" className=\"form_option\">Summer</option> \n               <option value=\"Spring\" className=\"form_option\">Spring</option> \n               <option value=\"Autumn\" className=\"form_option\">Autumn</option> \n               <option value=\"Winter\" className=\"form_option\">Winter</option> \n               \n            </select>\n            <label className=\"form_label_countries\">Countries</label>\n            \n            <select onChange={handleSelect} name=\"countries\" multiple className=\"form_countries\"> \n                {\n                    \n                    order.map((e,i)=><option key={e.id} value={e.id} className=\"form_option_countries\">{e.name}</option>)\n                }\n            </select>\n            <div>\n            {\n                values.countries.map(e=>\n                    {\n                        let label= countries.find(x => e===x.id);\n                        \n                       return(\n                       <p className=\"form_country\"> -{label.name}</p>\n                       )\n                       \n                       \n                    })\n            }\n            </div>\n            <button  onClick={onClick2}  className=\"form_button_countries\">Reset</button>\n            <button type=\"submit\" disabled={error.length>1} className=\"form_button\">Create</button>\n            \n            \n        </form>\n                 \n        </div>\n    )\n}\n\nexport default Form;","import React from \"react\";\nimport { connect} from \"react-redux\";\nimport {getCountryId, removeCountry } from \"../../redux/actions\";\nimport Nav from \"../Nav/Nav\";\nimport \"./details.css\";\n\n\nclass Details extends React.Component{\n    componentDidMount() { \n        console.log(this.props)\n        const locate= this.props.location[\"pathname\"];\n        const split=locate.split(\"/\");\n        const result= split[2]\n        const id=result.toString()\n        console.log(id)\n        window.scrollTo(0, 0)\n        this.props.removeCountry();\n        this.props.getCountryId(id)\n    }\n\n    render() {\n        return (\n            <div className=\"details_container\">\n                    <Nav/>\n                    <div className=\"details_card\">\n                        {console.log(this.props.countryDetail)}\n                        <img src={this.props.countryDetail.image} alt={this.props.countryDetail.name} className=\"details_card_image\"/>\n                        <h1 className=\"details_card_name\">{this.props.countryDetail.name}</h1>\n                        <p className=\"details_card_continent\">{this.props.countryDetail.continent}</p>\n                        <p><b>Capital:</b> {this.props.countryDetail.capital}</p>\n                        <p><b>Subregion:</b> {this.props.countryDetail.subregion}</p>\n                    <div className=\"details_card_names\">\n                        <p><b>Area:</b> </p>\n                        <p><b>Population:</b> </p>\n                        </div>\n                        <div className=\"details_card_numbers\">\n                        <p>{this.props.countryDetail.area}</p>\n                        <p>{this.props.countryDetail.population}</p>\n                    </div>\n                    </div>\n                        <h3 className=\"details_activities_title\">Activities</h3>\n\n                        <div className=\"details_activities\">\n                         {this.props.countryDetail.activities?  this.props.countryDetail.activities.map(x => \n                           \n                           <div className=\"details_activities_card\">\n                                 <h4 className=\"details_activities_card_name\" >{x.name.toUpperCase()}</h4>\n                                 <p className=\"details_activities_card_duration\"> <b>Duration:</b> {x.duration} Days </p>\n                                 <p className=\"details_activities_card_difficulty\"><b>Difficulty:</b> {x.difficulty} </p>\n                                 <p className=\"details_activities_card_season\"><b>Season:</b> {x.season}</p>\n                                 \n                              </div>\n                         ):   <p>Este pais no tiene actividades</p>}\n                        \n                         </div>\n                    \n                    \n                </div>\n                \n        )\n    }\n}\n\n    \n\n    function mapStateToProps(state) {\n        return {\n            countryDetail: state.countryDetail\n        }\n    }\n\n    function mapDispatchToProps (dispatch) {\n        return {\n            getCountryId: (id) => dispatch(getCountryId(id)),\n            removeCountry: () => dispatch(removeCountry())\n        }\n    }\n\n\n  export default connect(mapStateToProps, mapDispatchToProps)(Details)  ","import './App.css';\nimport React from \"react\";\nimport {Route} from \"react-router-dom\";\nimport LandingPage from \"./components/LandingPage/landingPage.js\";\nimport Home from \"./components/Home/Home\";\nimport Form from \"./components/Form/Form\";\nimport Details from \"./components/Details/Details\";\nimport Activities from './components/Activities/Activities';\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Route exact path=\"/\" component={LandingPage} />\n      <Route path=\"/detail\" component={Details} />\n      <Route path=\"/home\" component={Home} />\n      <Route path=\"/create\" component={Form} />\n      <Route path=\"/activities\" component={Activities}/>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nconst initialState={\n    countries: [],\n    activities: [],\n    countryDetail: {}\n}\n\n\nfunction reducer(state= initialState, action){\n    switch(action.type){\n        case \"GET_COUNTRIES_ORDER\":\n            return {\n                ...state,\n                countries: action.payload\n            }\n\n        case \"GET_COUNTRIES\":\n            return {\n                ...state,\n                countries: action.payload\n            }\n        case \"GET_ALL_COUNTRIES\":\n            return {\n                ...state,\n                countries: action.payload\n            }    \n\n        case \"GET_COUNTRY_NAME\":\n                return {\n                    ...state,\n                    countries: action.payload\n                }    \n       case \"GET_COUNTRY_ID\":\n                return {\n                    ...state,\n                    countryDetail: action.payload\n                }\n        case \"SORT_COUNTRIES_CONTINENT\":\n            return {\n                ...state,\n                countries: action.payload.filter(x => x.continent === action.continent)\n            }\n\n        case \"GET_ACTIVITIES\":\n            return {\n                ...state,\n                activities: action.payload\n            }\n\n        case \"REMOVE_COUNTRIES\":\n            return {\n                ...state,\n                countries:[]\n            }\n        case \"REMOVE_COUNTRY\" :\n            return {\n                ...state,\n                countryDetail:{}\n            }        \n        default:\n            return state\n\n        }         \n}\n\n\nexport default reducer;","import { createStore, applyMiddleware} from \"redux\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from \"redux-thunk\" ;\nimport reducer from \"./reducer\";\n\n\n\nconst store= createStore(\n\treducer, composeWithDevTools(\n\t\tapplyMiddleware(thunk) \n\t));\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {BrowserRouter} from  \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport store from \"./redux/store\";\n\nReactDOM.render(\n    <Provider store={store}>\n    <BrowserRouter>\n    <App />\n    </BrowserRouter>\n    </Provider>,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}